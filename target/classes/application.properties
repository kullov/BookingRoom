# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false

server.port = 8090
# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "booking-room"
# Database connection properties
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://85.10.205.173/bookingroom?useSSL=false
#spring.datasource.url=jdbc:mysql://localhost/booking_room?autoReconnect=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=
spring.datasource.username=ttnga1912
spring.datasource.password=12345678

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect